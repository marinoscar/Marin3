@using MarinApp.Core.Entities
@using MarinApp.Core.Services



@page "/appconfig"

@inject AppConfigurationService Service
@inject ILogger<AppConfig> Logger

@* <MudDataGrid T="AppConfiguration" Items="@AppConfigurations" ReadOnly="false"
             EditMode="DataGridEditMode.Form"
             CommittedItemChanges="@OnCommittedItemChanges">
             
    <ToolBarContent>
        <MudText Typo="Typo.h3">Application Configuration</MudText>
        <MudSpacer />
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Key" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Value" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Environment" Sortable="true" Filterable="true" />
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItemAsync" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
 *@

 <MarinApp.Core.Components.DataGrid.DataGridEx T="AppConfiguration" Items="@AppConfigurations">

 </MarinApp.Core.Components.DataGrid.DataGridEx>

@code {

    public IQueryable<AppConfiguration> AppConfigurations { get; set; } = Enumerable.Empty<AppConfiguration>().AsQueryable();

    protected override async Task OnInitializedAsync()
    {
        AppConfigurations = await Service.GetAppConfigurationsAsync(CancellationToken.None);
        if (AppConfigurations == null)
            Logger.LogWarning("No configurations found, initializing with empty list.");

        await base.OnInitializedAsync();
    }

    private async Task OnCommittedItemChanges(AppConfiguration item)
    {
       await Service.AddOrUpdateAppConfigurationAsync(item, CancellationToken.None);
    }
}
