@using Microsoft.EntityFrameworkCore
@using MarinApp.Core.Data
@using MarinApp.Core.Entities
@using MarinApp.Core.Services

@page "/appconfig"

@inject IDbContextFactory<AppDataContext> ContextFactory
@inject ILogger<AppConfig> Logger

<MudDataGrid T="AppConfiguration" 
             Items="@AppConfigurations" 
             ReadOnly="false">
             
    <ToolBarContent>
        <MudText Typo="Typo.h3">Application Configuration</MudText>
        <MudSpacer />
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Key" Title="Key" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Value" Title="Value" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Environment" Title="Environment" Sortable="true" Filterable="true" />
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItemAsync" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>


@code {


    private AppDataContext Context => ContextFactory.CreateDbContext();
    public IEnumerable<AppConfiguration> AppConfigurations { get; set; } = Enumerable.Empty<AppConfiguration>().AsQueryable();


    protected override async Task OnInitializedAsync()
    {
        AppConfigurations = await Context.AppConfiguration
            .AsNoTracking()
            .ToListAsync(CancellationToken.None);

        if (AppConfigurations == null)
            Logger.LogWarning("No data found, initializing with empty list.");

        await base.OnInitializedAsync();
    }
}
